---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: networktests.edgeworks.no
spec:
  group: edgeworks.no
  names:
    kind: Networktest
    listKind: NetworktestList
    plural: networktests
    singular: networktest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastResult
      name: LastResult
      type: string
    - jsonPath: .status.lastRun
      name: LastRun
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Networktest is the Schema for the networktests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworktestSpec defines the desired state of Networktest
            properties:
              enabled:
                default: true
                description: enabled lets you disable rules without deleting them.
                  Default true.
                type: boolean
              http:
                description: http defines settings for probing using http client
                properties:
                  failOnCodes:
                    description: failOnCodes lists the HTTP codes that should fail
                      the test. Empty list means a successful HTTP request means the
                      test is good.
                    items:
                      type: integer
                    type: array
                  tlsSkipVerify:
                    description: 'tlsSkipVerify allows optional https without verifying
                      server certificate (default: false)'
                    type: boolean
                  url:
                    description: url must be valid http/https url
                    type: string
                required:
                - url
                type: object
              interval:
                default: 1h
                description: interval defines how often the probing will be done.
                  Defaults to 1h. Valid time units are "ns", "us" (or "Âµs"), "ms",
                  "s", "m", "h".
                type: string
              tcp:
                description: tcp defines settings for probing using plain sockets
                properties:
                  address:
                    description: address must be valid IP address or host name
                    type: string
                  data:
                    type: string
                  port:
                    description: port must be valid port
                    type: integer
                required:
                - address
                - port
                type: object
              timeout:
                default: 5
                description: timeout in seconds until the probe is considered failed.
                  Default is 5 seconds.
                type: integer
            required:
            - interval
            - timeout
            type: object
          status:
            description: NetworktestStatus defines the observed state of Networktest
            properties:
              active:
                type: boolean
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastResult:
                type: string
              lastRun:
                format: date-time
                type: string
              message:
                type: string
              nextRun:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
